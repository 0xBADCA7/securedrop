---
- name: Copy the source backup script to the target server.
  copy:
    src: source-backup.py
    dest: /var/www/securedrop
    owner: root
    mode: "0770"

- name: Run the source backup script.
  # Setting args inline (against project style conventions) to work around
  # Ansible bug: https://github.com/ansible/ansible/issues/9693
  command: /var/www/securedrop/source-backup.py chdir=/tmp
  # If there are a lot of submissions, this task could take a while.
  async: 3600
  poll: 10
  register: backup_script_result

# The backup script emits the filename of the created tarball on stdout,
# so we'll store it for use in subsequent tasks.
- name: Store backup filename as host fact.
  set_fact:
    backup_filename: "{{ backup_script_result.stdout }}"

- name: Fetch the source backup file back to the Admin Workstation.
  fetch:
    src: /tmp/{{ backup_filename }}
    dest: ./{{ backup_filename }}
    flat: yes
    fail_on_missing: yes

- name: Delete backup file from Application Server (to save disk space).
  file:
    path: /tmp/{{ backup_filename }}
    state: absent

- name: Ensure the database is owned by the www-data user.
  file:
    path: /var/lib/securedrop/db.sqlite
    owner: www-data
    group: www-data
